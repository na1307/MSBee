<!--
***********************************************************************************************
MSBee.Settings.targets

WARNING:  DO NOT CHECK IN this file when it contains paths to any dependencies. These paths
          are machine specific and should not be stored in the source tree.

This file is where you should set local paths to third party tools that are used when building 
and/or testing MSBee. When inserting paths to these tools, be sure to include a trailing slash.

Currently, MSBee has a dependency on FxCop for code analysis, NUnit for testing, 
and WiX for building the MSBee installer. Each tool has a property which specifies
the absolute path to that tool. These properties are accessed in the MSBee project files 
and all these properties must be set prior to building MSBee. 

When adding a new third party dependency to MSBee, a property should be created in this file
that represents a path to that tool's directory. The ErrorText property can be overriden to 
display an error message if a file in the tool's directory doesn't exist. For example, the 
ErrorText property for NUnit checks that nunit.framework.dll resides in $(NUnitDir). If 
nunit.framework.dll isn't present, the ErrorText property is set with an error message.

Copyright (C) Microsoft Corporation. All rights reserved.
***********************************************************************************************
-->

<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <SettingsFileName>MSBee.Settings.targets</SettingsFileName>
  </PropertyGroup>
  <Choose>
    <When Condition=" '$(Configuration)'=='Debug' ">
      <PropertyGroup>
        <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
        <Optimize>false</Optimize>
      </PropertyGroup>
    </When>
    <Otherwise>
      <PropertyGroup>
        <!-- 
          The log file path can be checked in because it relies on MSBuild properties to resolve machine specific paths
          and it's always written to the same relative location.
        -->
        <FxCopLogFile>$(ProjectDir)$(OutputPath)$(TargetFileName).CodeAnalysisLog.xml</FxCopLogFile>
        
        <!-- Code analysis on MSBee is performed by FxCop 1.35, which is available at http://www.gotdotnet.com/team/fxcop/ -->
        <FxCopExtDir></FxCopExtDir>
        <ErrorText Condition=" !Exists('$(FxCopExtDir)fxcopcmd.exe') ">
          "$(FxCopExtDir)fxcopcmd.exe" could not be found; FxCopExtDir must be set to a valid path in $(SettingsFileName).
        </ErrorText>
        
        <!-- Unit tests for MSBee are developed and run using NUnit 2.2.7, which is available at http://www.nunit.org -->
        <NUnitDir></NUnitDir>
        <ErrorText Condition=" !Exists('$(NUnitDir)nunit.framework.dll') ">
          "$(NUnitDir)nunit.framework.dll" could not be found; NUnitDir must be set to a valid path in $(SettingsFileName).
        </ErrorText>

        <!-- The MSBee installer is built with WiX 2.0.3719; download the WiX binaries at http://sourceforge.net/projects/wix/ -->
        <WiXDir></WiXDir>
        <ErrorText Condition=" !Exists('$(WiXDir)candle.exe') ">
          "$(WiXDir)candle.exe" could not be found; WiXDir must be set to a valid path in $(SettingsFileName).
        </ErrorText>

        <CoreCompileDependsOn Condition=" '$(ErrorText)' != '' ">MSBeeDependencyMissing</CoreCompileDependsOn>
      </PropertyGroup>
    </Otherwise>
  </Choose>
  
  <Target Name="MSBeeDependencyMissing">
    <Error  
      Text="$(ErrorText)" />
  </Target>
</Project>
